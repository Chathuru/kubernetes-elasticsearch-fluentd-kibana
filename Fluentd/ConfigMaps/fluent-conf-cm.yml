apiVersion: v1
data:
  fluent.conf: |-
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/fluent.conf.erb

    @include "#{ENV['FLUENTD_SYSTEMD_CONF'] || 'systemd'}.conf"
    @include "#{ENV['FLUENTD_PROMETHEUS_CONF'] || 'prometheus'}.conf"
    @include kubernetes.conf
    @include conf.d/*.conf

    <match **>
       @type elasticsearch
       @id out_es
       @log_level info
       include_tag_key true
       host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
       port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
       path "#{ENV['FLUENT_ELASTICSEARCH_PATH']}"
       scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
       ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
       ssl_version "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
       user "#{ENV['FLUENT_ELASTICSEARCH_USER'] || use_default}"
       password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD'] || use_default}"
       reload_connections "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_CONNECTIONS'] || 'false'}"
       reconnect_on_error "#{ENV['FLUENT_ELASTICSEARCH_RECONNECT_ON_ERROR'] || 'true'}"
       reload_on_failure "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_ON_FAILURE'] || 'true'}"
       log_es_400_reason "#{ENV['FLUENT_ELASTICSEARCH_LOG_ES_400_REASON'] || 'false'}"

       logstash_prefix fluentd
       logstash_dateformat %Y.%m.%d
       logstash_format true

       index_date_pattern "now/d-000001"
       rollover_index true
       type_name fluentd
       include_timestamp true
       template_name fluentd
       template_file '/fluentd/etc/conf.d/template.json'
       template_overwrite true
       ilm_policy_id log-cleanup-policy
       ilm_policy {"policy":{"phases":{"hot":{"min_age":"0ms","actions":{"rollover":{"max_age":"10m","max_size":"10mb"}}},"delete":{"min_age":"15m","actions":{"delete":{}}}}}} 
       enable_ilm true
       ilm_policy_overwrite true

       #target_index_key "#{ENV['FLUENT_ELASTICSEARCH_TARGET_INDEX_KEY'] || use_nil}"
       #sniffer_class_name "#{ENV['FLUENT_SNIFFER_CLASS_NAME'] || 'Fluent::Plugin::ElasticsearchSimpleSniffer'}"
       #request_timeout "#{ENV['FLUENT_ELASTICSEARCH_REQUEST_TIMEOUT'] || '5s'}"
       #application_name "#{ENV['FLUENT_ELASTICSEARCH_APPLICATION_NAME'] || use_default}"
       #suppress_type_name "#{ENV['FLUENT_ELASTICSEARCH_SUPPRESS_TYPE_NAME'] || 'true'}"
       #template_file "#{ENV['FLUENT_ELASTICSEARCH_TEMPLATE_FILE'] || use_nil}"

       <buffer>
         flush_thread_count "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
         flush_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_INTERVAL'] || '5s'}"
         chunk_limit_size "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
         queue_limit_length "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
         retry_max_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
         retry_forever true
       </buffer>
    </match>
kind: ConfigMap
metadata:
  name: fluentd-main-config
  namespace: k-logging
---
apiVersion: v1
data:
  json.conf: |-
    <match kubernetes.var.log.containers.fluentd**>
      @type null
    </match>
    
    <filter *.**>
      @type record_transformer
      <record>
        raw ${record["log"]}
      </record>
    </filter>
    
    <filter *.**>
      @type parser
      @log_level debug
      key_name raw
      reserve_data true
      remove_key_name_field true
      emit_invalid_record_to_error true
      <parse>
        @type json
        time_key timestamp
        time_type string
      </parse>
    </filter>
    
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: k-logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: template-json
  namespace: k-logging
data:
  template.json: |
    {
      "index_patterns": "fluentd-*",
      "template": {
        "settings": {
          "index.blocks.read_only_allow_delete": "false",
          "index.query.default_field": [
            "*"
          ],
          "index.refresh_interval": "1s",
          "index.write.wait_for_active_shards": "1",
          "index.lifecycle.name": "log-cleanup-policy",
          "index.lifecycle.rollover_alias": "cleanup-alias",
          "index.priority": "100",
          "index.number_of_replicas": "1"
        },
        "aliases": {
          "cleanup-alias":{
            "is_write_index": true 
          }
        }
      }
    }
